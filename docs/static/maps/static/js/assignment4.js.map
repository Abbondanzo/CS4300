{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/common/render/2d/twoDimensionConverter.ts","webpack:///./src/common/util/colors.ts","webpack:///./src/common/util/degrees.ts","webpack:///./src/common/setup/getScriptContentsById.ts","webpack:///./src/common/util/strings.ts","webpack:///./src/common/render/2d/circle.ts","webpack:///./src/common/render/2d/rectangle.ts","webpack:///./src/common/render/2d/star.ts","webpack:///./src/common/render/2d/triangle.ts","webpack:///./src/common/setup/createProgramFromScripts.ts","webpack:///./src/common/util/numbers.ts","webpack:///./src/common/model/canvas2DShapeBuilders.ts","webpack:///./src/common/components/NavBar.tsx","webpack:///./src/common/util/objects.ts","webpack:///./src/common/render/2d/index.ts","webpack:///./src/common/util/m3.ts","webpack:///./src/assignment4/Scene.ts","webpack:///./src/assignment4/hooks/useScene.ts","webpack:///./src/assignment4/components/Canvas.tsx","webpack:///./src/assignment4/components/constants.ts","webpack:///./src/assignment4/components/form/EditShape.tsx","webpack:///./src/assignment4/components/form/ShapeColorSelect.tsx","webpack:///./src/assignment4/components/form/ShapeList.tsx","webpack:///./src/assignment4/components/form/ShapeTypeSelect.tsx","webpack:///./src/assignment4/components/App.tsx","webpack:///./src/assignment4/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","this","oldJsonpFunction","slice","twoDimensionConverter","points","newPoints","hexToRgb","hex","parseRgb","exec","rgb","red","parseInt","green","blue","colorToHex","color","toString","rgbToHex","console","assert","rh","gh","bh","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","getScriptContentsById","id","document","getElementById","text","toFirstUpperCase","charAt","toUpperCase","toLowerCase","renderCircle","gl","circle","radius","dimensions","height","dimenScale","width","increment","SIDES","cx","position","x","cy","y","circlePoints","angle","xn","cos","yn","sin","bufferData","ARRAY_BUFFER","Float32Array","STATIC_DRAW","drawArrays","TRIANGLE_FAN","renderRectangle","rectangle","x1","y1","x2","y2","TRIANGLES","renderStar","star","starPoints","tan","t1","t2","t3","renderTriangle","triangle","createProgramFromScripts","vertexShaderSource","fragmentShaderSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","truncate","number","round","buildBasicShape","type","properties","translation","rotation","z","scale","buildRectangle","buildTriangle","buildShape","title","aria-label","className","href","aria-current","objectEquality","objA","objB","renderShape","shape","error","m3","projection","identity","tx","ty","angleInRadians","scaling","sx","sy","multiply","a","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","translate","rotate","canvas","getContext","useProgram","attributeCoords","getAttribLocation","uniformMatrix","getUniformLocation","uniformColor","enableVertexAttribArray","bufferCoords","createBuffer","uniformResolution","uniform2f","clearCanvas","Scene","instance","Error","clearColor","clear","COLOR_BUFFER_BIT","shapes","bindBuffer","vertexAttribPointer","FLOAT","forEach","uniform4f","matrix","clientWidth","clientHeight","uniformMatrix3fv","onClick","options","canvasRef","scene","setScene","hasRendered","setHasRendered","current","init","vertexId","fragmentId","render","onMouseDown","event","boundingRectangle","target","getBoundingClientRect","clientX","left","clientY","top","ref","ORIGIN","SIZE_ONE","RED_RGB","BLUE_RGB","BLUE_RECTANGLE","RED_TRIANGLE","onFieldChange","shapeAttr","stateItemKey","currentValue","props","activeShape","eventValue","Number","newValue","newShape","onUpdate","onRotationChange","onColorChange","hexValue","htmlFor","step","onChange","preventDefault","stopPropagation","onDelete","renderTextInput","renderColorInput","renderDeleteButton","shapeColor","setShapeColor","activeShapeIndex","onSelect","map","index","classList","join","SHAPE_TYPES","selected","style","textAlign","shapeType","checked","onAddShapeTypeSelect","addShapeType","setState","onAddShapeColorSelect","addShapeColor","onShapeIndexSelect","selectedShapeIndex","getActiveShape","state","onUpdateShape","newShapes","onDeleteShape","max","onAddShape","shapeProperties","maxHeight","overflow","maxWidth","margin","NavBar","renderAddShapeCard","renderEditSection","addEventListener","domContainer"],"mappings":"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","file":"static/js/assignment4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = this[\"webpackJsonp\"] = this[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([45,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const twoDimensionConverter = (points: number[]) => {\n  const newPoints = [];\n  for (let i = 0; i < points.length; i++) {\n    newPoints.push(points[i]);\n    // Push every odd number (after Y is inserted)\n    if (i % 2 === 1) {\n      newPoints.push(0);\n    }\n  }\n  return newPoints;\n};\n","export const hexToRgb = (hex: string) => {\n  const parseRgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  const rgb = {\n    red: parseInt(parseRgb[1], 16),\n    green: parseInt(parseRgb[2], 16),\n    blue: parseInt(parseRgb[3], 16),\n  };\n  rgb.red /= 255;\n  rgb.green /= 255;\n  rgb.blue /= 255;\n  return rgb;\n};\n\nconst colorToHex = (color: number): string => {\n  const hex = (color * 255).toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\nexport const rgbToHex = (color: Canvas2D.Color) => {\n  console.assert(color.red <= 1, \"Red is greater than 1\");\n  const rh = colorToHex(color.red);\n  console.assert(color.green <= 1, \"Green is greater than 1\");\n  const gh = colorToHex(color.green);\n  console.assert(color.blue <= 1, \"Blue is greater than 1\");\n  const bh = colorToHex(color.blue);\n  return `#${rh}${gh}${bh}`;\n};\n","import { truncate } from \"./numbers\";\n\nexport const degreesToRadians = (degrees: number) => {\n  return ((degrees % 360) * Math.PI) / 180;\n};\n\nexport const radiansToDegrees = (radians: number) => {\n  return truncate((radians * 180) / Math.PI) % 360;\n};\n","export const getScriptContentsById = (id: string): string => {\n  const element = document.getElementById(id) as HTMLScriptElement;\n  return element.text;\n};\n","export const toFirstUpperCase = (name: string) =>\n  name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\n/**\n * Renders a n-side polygon as a circle inside the given webGL context.\n *\n * @param gl rendering context\n * @param circle dimensions holder\n */\nexport const renderCircle = (\n  gl: WebGLRenderingContext,\n  circle: Canvas2D.Circle | Canvas3D.Circle\n) => {\n  const radius = circle.dimensions.height / 2;\n  const dimenScale = circle.dimensions.width / circle.dimensions.height;\n  const increment = (Math.PI * 2) / SIDES;\n  const cx = circle.position.x;\n  const cy = circle.position.y;\n  // Generate points based on unit circle\n  let circlePoints = [cx, cy];\n  for (let n = SIDES; n >= 0; n--) {\n    const angle = n * increment;\n    const xn = cx + radius * Math.cos(angle) * dimenScale;\n    const yn = cy - radius * Math.sin(angle);\n    circlePoints.push(xn, yn);\n  }\n\n  const is3D = \"z\" in circle.position;\n  if (is3D) {\n    circlePoints = twoDimensionConverter(circlePoints);\n  }\n\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array(circlePoints),\n    gl.STATIC_DRAW\n  );\n  gl.drawArrays(gl.TRIANGLE_FAN, 0, SIDES + 2);\n};\n\nconst SIDES = 24;\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\nexport const renderRectangle = (\n  gl: WebGLRenderingContext,\n  rectangle: Canvas2D.Rectangle | Canvas3D.Rectangle\n) => {\n  const x1 = rectangle.position.x - rectangle.dimensions.width / 2;\n  const y1 = rectangle.position.y - rectangle.dimensions.height / 2;\n  const x2 = rectangle.position.x + rectangle.dimensions.width / 2;\n  const y2 = rectangle.position.y + rectangle.dimensions.height / 2;\n  let points = [x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2];\n\n  const is3D = \"z\" in rectangle.position;\n  if (is3D) {\n    points = twoDimensionConverter(points);\n  }\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(points), gl.STATIC_DRAW);\n  gl.drawArrays(gl.TRIANGLES, 0, 6);\n};\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\n/**\n * Renders a 5-pointed star inside the given webGL context.\n *\n * 2:33am geometry is good geometry\n *\n * @param gl rendering context\n * @param star dimensions holder\n */\nexport const renderStar = (\n  gl: WebGLRenderingContext,\n  star: Canvas2D.Star | Canvas3D.Star\n) => {\n  const radius = star.dimensions.height / 2;\n  const dimenScale = star.dimensions.width / star.dimensions.height;\n  const increment = (Math.PI * 2) / 5;\n  const cx = star.position.x;\n  const cy = star.position.y;\n  // Generate points from top, clockwise\n  const starPoints = {};\n  for (let n = 0; n < 5; n++) {\n    const angle = Math.PI / 2 - n * increment;\n    const xn = cx + radius * Math.cos(angle) * dimenScale;\n    const yn = cy - radius * Math.sin(angle);\n    starPoints[`${n + 1}`] = [xn, yn];\n  }\n  // Generate sixth point below center\n  starPoints[\"6\"] = [\n    cx,\n    cy + radius * (Math.tan((1 / 5) * Math.PI) - Math.tan((1 / 10) * Math.PI)),\n  ];\n  // Produce three triangles that compose the star\n  const t1 = [...starPoints[\"1\"], ...starPoints[\"3\"], ...starPoints[\"6\"]];\n  const t2 = [...starPoints[\"1\"], ...starPoints[\"6\"], ...starPoints[\"4\"]];\n  const t3 = [...starPoints[\"5\"], ...starPoints[\"2\"], ...starPoints[\"6\"]];\n\n  let points = [...t1, ...t2, ...t3];\n\n  const is3D = \"z\" in star.position;\n  if (is3D) {\n    points = twoDimensionConverter(points);\n  }\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(points), gl.STATIC_DRAW);\n  gl.drawArrays(gl.TRIANGLES, 0, 3 * 3);\n};\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\nexport const renderTriangle = (\n  gl: WebGLRenderingContext,\n  triangle: Canvas2D.Triangle | Canvas3D.Triangle\n) => {\n  const x1 = triangle.position.x - triangle.dimensions.width / 2;\n  const y1 = triangle.position.y + triangle.dimensions.height / 2;\n  const x2 = triangle.position.x + triangle.dimensions.width / 2;\n  const y2 = triangle.position.y + triangle.dimensions.height / 2;\n  const x3 = triangle.position.x;\n  const y3 = triangle.position.y - triangle.dimensions.height / 2;\n\n  let points = [x1, y1, x3, y3, x2, y2];\n\n  const is3D = \"z\" in triangle.position;\n  if (is3D) {\n    points = twoDimensionConverter(points);\n  }\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(points), gl.STATIC_DRAW);\n  gl.drawArrays(gl.TRIANGLES, 0, 3);\n};\n","export const createProgramFromScripts = (\n  gl: WebGLRenderingContext,\n  vertexShaderSource: string,\n  fragmentShaderSource: string\n) => {\n  // Create GLSL shaders, upload the GLSL source, compile the shaders\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexShaderSource);\n  gl.compileShader(vertexShader);\n\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentShaderSource);\n  gl.compileShader(fragmentShader);\n\n  // Link the two shaders into a program\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  return program;\n};\n","export const truncate = (number: number) => {\n  return Math.round(number * 100) / 100;\n};\n","const buildBasicShape = (type: Canvas2D.ShapeType) => (\n  properties: Partial<Canvas2D.Shape> = {}\n): Canvas2D.Shape => {\n  return {\n    type,\n    position: {\n      x: 0,\n      y: 0,\n    },\n    dimensions: {\n      width: 1,\n      height: 1,\n    },\n    color: {\n      red: 0,\n      green: 0,\n      blue: 0,\n    },\n    translation: { x: 0, y: 0 },\n    rotation: { z: 0 },\n    scale: { x: 1, y: 1 },\n    ...properties,\n  };\n};\n\nexport const buildRectangle = buildBasicShape(\"RECTANGLE\");\nexport const buildTriangle = buildBasicShape(\"TRIANGLE\");\nexport const buildStar = buildBasicShape(\"STAR\");\nexport const buildCircle = buildBasicShape(\"CIRCLE\");\n\nexport const buildShape = (\n  type: Canvas2D.ShapeType,\n  properties: Partial<Canvas2D.Shape>\n) => {\n  return buildBasicShape(type)(properties);\n};\n","import React from \"react\";\n\ninterface Props {\n  title: string;\n}\n\nconst NavBar = ({ title }: Props) => {\n  document.title = title;\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"/\">Home</a>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            {title}\n          </li>\n        </ol>\n      </nav>\n      <h1>{title}</h1>\n    </>\n  );\n};\n\nexport default NavBar;\n","import equal from \"fast-deep-equal\";\n\nexport const objectEquality = <T extends object>(objA: T, objB: T): boolean => {\n  return equal(objA, objB);\n};\n","import { renderCircle } from \"./circle\";\nimport { renderRectangle } from \"./rectangle\";\nimport { renderStar } from \"./star\";\nimport { renderTriangle } from \"./triangle\";\n\nexport const renderShape = (\n  gl: WebGLRenderingContext,\n  shape: Canvas2D.Shape\n) => {\n  switch (shape.type) {\n    case \"RECTANGLE\":\n      renderRectangle(gl, shape as Canvas2D.Rectangle);\n      break;\n    case \"TRIANGLE\":\n      renderTriangle(gl, shape as Canvas2D.Triangle);\n      break;\n    case \"CIRCLE\":\n      renderCircle(gl, shape as Canvas2D.Circle);\n      break;\n    case \"STAR\":\n      renderStar(gl, shape as Canvas2D.Star);\n      break;\n    default:\n      console.error(\"Rendering unhandled shape type\", shape);\n  }\n};\n","const m3 = {\n  projection: (width: number, height: number) => {\n    // Note: This matrix flips the Y axis so that 0 is at the top.\n    return [2 / width, 0, 0, 0, -2 / height, 0, -1, 1, 1];\n  },\n\n  identity: () => {\n    return [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  },\n\n  translation: (tx: number, ty: number) => {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  rotation: (angleInRadians: number) => {\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  scaling: (sx: number, sy: number) => {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  multiply: (a: number[], b: number[]) => {\n    var a00 = a[0 * 3 + 0];\n    var a01 = a[0 * 3 + 1];\n    var a02 = a[0 * 3 + 2];\n    var a10 = a[1 * 3 + 0];\n    var a11 = a[1 * 3 + 1];\n    var a12 = a[1 * 3 + 2];\n    var a20 = a[2 * 3 + 0];\n    var a21 = a[2 * 3 + 1];\n    var a22 = a[2 * 3 + 2];\n    var b00 = b[0 * 3 + 0];\n    var b01 = b[0 * 3 + 1];\n    var b02 = b[0 * 3 + 2];\n    var b10 = b[1 * 3 + 0];\n    var b11 = b[1 * 3 + 1];\n    var b12 = b[1 * 3 + 2];\n    var b20 = b[2 * 3 + 0];\n    var b21 = b[2 * 3 + 1];\n    var b22 = b[2 * 3 + 2];\n    return [\n      b00 * a00 + b01 * a10 + b02 * a20,\n      b00 * a01 + b01 * a11 + b02 * a21,\n      b00 * a02 + b01 * a12 + b02 * a22,\n      b10 * a00 + b11 * a10 + b12 * a20,\n      b10 * a01 + b11 * a11 + b12 * a21,\n      b10 * a02 + b11 * a12 + b12 * a22,\n      b20 * a00 + b21 * a10 + b22 * a20,\n      b20 * a01 + b21 * a11 + b22 * a21,\n      b20 * a02 + b21 * a12 + b22 * a22,\n    ];\n  },\n\n  translate: (m: number[], tx: number, ty: number) => {\n    return m3.multiply(m, m3.translation(tx, ty));\n  },\n\n  rotate: (m: number[], angleInRadians: number) => {\n    return m3.multiply(m, m3.rotation(angleInRadians));\n  },\n\n  scale: (m: number[], sx: number, sy: number) => {\n    return m3.multiply(m, m3.scaling(sx, sy));\n  },\n};\n\nexport default m3;\n","import { renderShape } from \"@common/render/2d\";\nimport { createProgramFromScripts } from \"@common/setup/createProgramFromScripts\";\nimport m3 from \"@common/util/m3\";\n\nexport default class Scene {\n  private readonly gl: WebGLRenderingContext;\n  private readonly attributeCoords: number;\n  private readonly uniformMatrix: WebGLUniformLocation;\n  private readonly uniformColor: WebGLUniformLocation;\n  private readonly bufferCoords: WebGLBuffer;\n\n  private constructor(\n    canvas: HTMLCanvasElement,\n    vertexShaderSource: string,\n    fragmentShaderSource: string\n  ) {\n    this.gl = canvas.getContext(\"webgl\");\n\n    // create and use a GLSL program\n    const program = createProgramFromScripts(\n      this.gl,\n      vertexShaderSource,\n      fragmentShaderSource\n    );\n    this.gl.useProgram(program);\n\n    // get reference to GLSL attributes and uniforms\n    this.attributeCoords = this.gl.getAttribLocation(program, \"a_coords\");\n    this.uniformMatrix = this.gl.getUniformLocation(program, \"u_matrix\");\n    this.uniformColor = this.gl.getUniformLocation(program, \"u_color\");\n\n    // initialize coordinate attribute to send each vertex to GLSL program\n    this.gl.enableVertexAttribArray(this.attributeCoords);\n\n    // initialize coordinate buffer to send array of vertices to GPU\n    this.bufferCoords = this.gl.createBuffer();\n\n    // configure canvas resolution and clear the canvas\n    const uniformResolution = this.gl.getUniformLocation(\n      program,\n      \"u_resolution\"\n    );\n    this.gl.uniform2f(\n      uniformResolution,\n      this.gl.canvas.width,\n      this.gl.canvas.height\n    );\n    this.clearCanvas();\n  }\n\n  private clearCanvas() {\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  render(shapes: Canvas2D.Shape[]) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.bufferCoords);\n    this.gl.vertexAttribPointer(\n      this.attributeCoords,\n      2,\n      this.gl.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    if (shapes.length === 0) {\n      this.clearCanvas();\n      return;\n    }\n\n    shapes.forEach((shape) => {\n      this.gl.uniform4f(\n        this.uniformColor,\n        shape.color.red,\n        shape.color.green,\n        shape.color.blue,\n        1\n      );\n\n      // compute transformation matrix\n      const canvas = this.gl.canvas as HTMLCanvasElement;\n      let matrix = m3.projection(canvas.clientWidth, canvas.clientHeight);\n      matrix = m3.translate(matrix, shape.translation.x, shape.translation.y);\n      matrix = m3.rotate(matrix, shape.rotation.z);\n      matrix = m3.scale(matrix, shape.scale.x, shape.scale.y);\n\n      // apply transformation matrix.\n      this.gl.uniformMatrix3fv(this.uniformMatrix, false, matrix);\n\n      renderShape(this.gl, shape);\n    });\n  }\n\n  /**\n   * ========================================\n   * Scenes are singletons\n   * ========================================\n   */\n  private static instance?: Scene;\n  static getInstance() {\n    if (!Scene.instance) {\n      throw new Error(\"Scene not initialized with call to `init`\");\n    }\n    return Scene.instance;\n  }\n  static init(\n    canvas: HTMLCanvasElement,\n    vertexShaderSource: string,\n    fragmentShaderSource: string\n  ) {\n    Scene.instance = new Scene(\n      canvas,\n      vertexShaderSource,\n      fragmentShaderSource\n    );\n    return Scene.instance;\n  }\n}\n","import { getScriptContentsById } from \"@common/setup/getScriptContentsById\";\nimport { RefObject, useEffect, useRef, useState } from \"react\";\n\nimport Scene from \"../Scene\";\n\ninterface UseSceneOptions {\n  fragmentId: string;\n  vertexId: string;\n}\n\ninterface UseStateValues {\n  scene: Scene | null;\n  canvasRef: RefObject<HTMLCanvasElement>;\n}\n\nexport const useScene = (options: UseSceneOptions): UseStateValues => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [scene, setScene] = useState<Scene | null>(null);\n  const [hasRendered, setHasRendered] = useState(false);\n\n  // Rebuild scene if options or canvas reference is modified\n  useEffect(() => {\n    const { current } = canvasRef;\n    if (!hasRendered) {\n      setHasRendered(true);\n    } else if (current !== null) {\n      setScene(\n        Scene.init(\n          canvasRef.current,\n          getScriptContentsById(options.vertexId),\n          getScriptContentsById(options.fragmentId)\n        )\n      );\n    }\n  }, [options.fragmentId, options.vertexId, canvasRef.current]);\n\n  return { scene, canvasRef };\n};\n","import React, { useEffect } from \"react\";\nimport { useScene } from \"../hooks/useScene\";\n\ninterface Props {\n  shapes: Canvas2D.Shape[];\n  onClick: (translation: Canvas2D.Translation) => void;\n}\n\nconst Canvas = ({ shapes, onClick }: Props) => {\n  const { scene, canvasRef } = useScene({\n    fragmentId: \"fragment-shader-2d\",\n    vertexId: \"vertex-shader-2d\",\n  });\n\n  useEffect(() => {\n    if (scene) {\n      scene.render(shapes);\n    }\n  }, [scene, shapes]);\n\n  const onMouseDown = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    const boundingRectangle = (event.target as HTMLCanvasElement).getBoundingClientRect();\n    const x = Math.round(event.clientX - boundingRectangle.left);\n    const y = Math.round(event.clientY - boundingRectangle.top);\n    onClick({ x, y });\n  };\n  return (\n    <canvas\n      id=\"canvas\"\n      width=\"500px\"\n      height=\"300px\"\n      className=\"mb-3\"\n      onMouseDown={onMouseDown}\n      ref={canvasRef}\n    ></canvas>\n  );\n};\n\nexport default Canvas;\n","import {\n  buildRectangle,\n  buildTriangle,\n} from \"@common/model/canvas2DShapeBuilders\";\nimport { hexToRgb } from \"@common/util/colors\";\n\nconst ORIGIN: Canvas2D.Position = { x: 0, y: 0 };\nconst SIZE_ONE: Canvas2D.Dimensions = { width: 1, height: 1 };\nconst RED_RGB = hexToRgb(\"#FF0000\");\nconst BLUE_RGB = hexToRgb(\"#0000FF\");\n\nexport const BLUE_RECTANGLE = buildRectangle({\n  position: ORIGIN,\n  dimensions: SIZE_ONE,\n  color: BLUE_RGB,\n  translation: { x: 200, y: 100 },\n  rotation: { z: 0 },\n  scale: { x: 50, y: 50 },\n});\n\nexport const RED_TRIANGLE = buildTriangle({\n  position: ORIGIN,\n  dimensions: SIZE_ONE,\n  color: RED_RGB,\n  translation: { x: 300, y: 100 },\n  rotation: { z: 0 },\n  scale: { x: 50, y: 50 },\n});\n","import { hexToRgb, rgbToHex } from \"@common/util/colors\";\nimport { degreesToRadians, radiansToDegrees } from \"@common/util/degrees\";\nimport { truncate } from \"@common/util/numbers\";\nimport React, { Component } from \"react\";\n\ninterface Props {\n  activeShape: Canvas2D.Shape;\n  onUpdate: (shape: Canvas2D.Shape) => void;\n  onDelete: () => void;\n}\n\nclass EditShape extends Component<Props> {\n  onFieldChange = (\n    shapeAttr: \"translation\" | \"scale\",\n    stateItemKey: string\n  ) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const currentValue = this.props.activeShape[shapeAttr];\n    const eventValue = truncate(Number(event.target.value));\n    const newValue = { ...currentValue, [stateItemKey]: eventValue };\n    const newShape = { ...this.props.activeShape, [shapeAttr]: newValue };\n    this.props.onUpdate(newShape);\n  };\n\n  onRotationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(event.target.value);\n    const newShape = {\n      ...this.props.activeShape,\n      rotation: { z: degreesToRadians(value) },\n    };\n    this.props.onUpdate(newShape);\n  };\n\n  renderTextInput() {\n    const { translation, scale, rotation } = this.props.activeShape;\n\n    return (\n      <>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"tx\">Translation X:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"tx\"\n              step=\"5\"\n              value={translation.x}\n              onChange={this.onFieldChange(\"translation\", \"x\")}\n            />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"ty\">Translation Y:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"ty\"\n              step=\"5\"\n              value={translation.y}\n              onChange={this.onFieldChange(\"translation\", \"y\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"sx\">Scale X:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"sx\"\n              step=\"0.5\"\n              value={scale.x}\n              onChange={this.onFieldChange(\"scale\", \"x\")}\n            />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"sy\">Scale Y:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"sy\"\n              step=\"0.5\"\n              value={scale.y}\n              onChange={this.onFieldChange(\"scale\", \"y\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-12\">\n            <label htmlFor=\"rz\">Rotation Z:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"rz\"\n              step=\"2\"\n              value={radiansToDegrees(rotation.z)}\n              onChange={this.onRotationChange}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  onColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const hexValue = event.target.value;\n    const color = hexToRgb(hexValue);\n    const newShape = { ...this.props.activeShape, color };\n    this.props.onUpdate(newShape);\n  };\n\n  renderColorInput() {\n    const { color } = this.props.activeShape;\n    return (\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-12\">\n          <label htmlFor=\"sx\">Color</label>\n          <input\n            type=\"color\"\n            className=\"form-control\"\n            id=\"sx\"\n            value={rgbToHex(color)}\n            onChange={this.onColorChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderDeleteButton() {\n    const onClick = (event: React.MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.props.onDelete();\n    };\n    return (\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-12\">\n          <button\n            id=\"addShape\"\n            className=\"btn btn-secondary btn-block\"\n            onClick={onClick}\n          >\n            Delete Shape\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        {this.renderTextInput()}\n        {this.renderColorInput()}\n        {this.renderDeleteButton()}\n      </form>\n    );\n  }\n}\n\nexport default EditShape;\n","import { hexToRgb, rgbToHex } from \"@common/util/colors\";\nimport React from \"react\";\n\ninterface Props {\n  shapeColor: Canvas2D.Color;\n  setShapeColor: (color: Canvas2D.Color) => void;\n}\n\nconst ShapeColorSelect = ({ shapeColor, setShapeColor }: Props) => {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const hexValue = event.target.value;\n    const color = hexToRgb(hexValue);\n    setShapeColor(color);\n  };\n\n  return (\n    <input\n      type=\"color\"\n      className=\"form-control\"\n      id=\"color\"\n      value={rgbToHex(shapeColor)}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default ShapeColorSelect;\n","import { toFirstUpperCase } from \"@common/util/strings\";\nimport React from \"react\";\n\ninterface Props {\n  shapes: Canvas2D.Shape[];\n  activeShapeIndex: number;\n  onSelect: (shapeIndex: number) => void;\n}\n\nconst ShapeList = ({ shapes, activeShapeIndex, onSelect }: Props) => {\n  return (\n    <div className=\"list-group list-group-flush\">\n      {shapes.map((shape, index) => {\n        const classList = [\"list-group-item\", \"list-group-item-action\"];\n        if (index === activeShapeIndex) {\n          classList.push(\"active\");\n        }\n        return (\n          <button\n            key={index}\n            className={classList.join(\" \")}\n            onClick={() => onSelect(index)}\n          >\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <p className=\"mb-0\">{toFirstUpperCase(shape.type)}</p>\n              <small>\n                X: {shape.translation.x} Y:{shape.translation.y}\n              </small>\n            </div>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ShapeList;\n","import { toFirstUpperCase } from \"@common/util/strings\";\nimport React from \"react\";\n\ninterface Props {\n  selected: Canvas2D.ShapeType;\n  onSelect: (shape: Canvas2D.ShapeType) => void;\n}\n\nconst SHAPE_TYPES: Canvas2D.ShapeType[] = [\n  \"RECTANGLE\",\n  \"TRIANGLE\",\n  \"STAR\",\n  \"CIRCLE\",\n];\n\nconst ShapeTypeSelect = ({ selected, onSelect }: Props) => {\n  const onChange = (event: React.ChangeEvent<HTMLFieldSetElement>) => {\n    const { value } = event.target as any;\n    onSelect(value);\n  };\n\n  return (\n    <fieldset\n      name=\"shape\"\n      className=\"form-group\"\n      onChange={onChange}\n      style={{ textAlign: \"center\" }}\n    >\n      {SHAPE_TYPES.map((shapeType) => {\n        const id = `radio-${shapeType.toLowerCase()}`;\n        return (\n          <div key={id} className=\"form-check form-check-inline\">\n            <input\n              id={id}\n              className=\"form-check-input\"\n              type=\"radio\"\n              value={shapeType}\n              checked={shapeType === selected}\n              onChange={() => {}}\n            />\n            <label className=\"form-check-label\" htmlFor={id}>\n              {toFirstUpperCase(shapeType)}\n            </label>\n          </div>\n        );\n      })}\n    </fieldset>\n  );\n};\n\nexport default ShapeTypeSelect;\n","import NavBar from \"@common/components/NavBar\";\nimport { buildShape } from \"@common/model/canvas2DShapeBuilders\";\nimport { objectEquality } from \"@common/util/objects\";\nimport React, { Component } from \"react\";\n\nimport Canvas from \"./Canvas\";\nimport { BLUE_RECTANGLE, RED_TRIANGLE } from \"./constants\";\nimport EditShape from \"./form/EditShape\";\nimport ShapeColorSelect from \"./form/ShapeColorSelect\";\nimport ShapeList from \"./form/ShapeList\";\nimport ShapeTypeSelect from \"./form/ShapeTypeSelect\";\n\ninterface Props {}\n\ninterface State {\n  shapes: Canvas2D.Shape[];\n  selectedShapeIndex: number;\n  addShapeType: Canvas2D.ShapeType;\n  addShapeColor: Canvas2D.Color;\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      shapes: [BLUE_RECTANGLE, RED_TRIANGLE],\n      selectedShapeIndex: 0,\n      addShapeType: \"RECTANGLE\",\n      addShapeColor: { red: 0, green: 1, blue: 0 },\n    };\n  }\n\n  onAddShapeTypeSelect = (addShapeType: Canvas2D.ShapeType) =>\n    this.setState({ addShapeType });\n\n  onAddShapeColorSelect = (addShapeColor: Canvas2D.Color) =>\n    this.setState({ addShapeColor });\n\n  renderAddShapeCard() {\n    return (\n      <div className=\"row\">\n        <div className=\"col mb-4\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Add Shape</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">\n                Select a shape type before clicking on the canvas\n              </h6>\n\n              <ShapeTypeSelect\n                selected={this.state.addShapeType}\n                onSelect={this.onAddShapeTypeSelect}\n              />\n              <ShapeColorSelect\n                shapeColor={this.state.addShapeColor}\n                setShapeColor={this.onAddShapeColorSelect}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onShapeIndexSelect = (selectedShapeIndex: number) =>\n    this.setState({ selectedShapeIndex });\n\n  getActiveShape = () => this.state.shapes[this.state.selectedShapeIndex];\n\n  onUpdateShape = (shape: Canvas2D.Shape) => {\n    const { shapes, selectedShapeIndex } = this.state;\n    // Short circuit if both equal\n    if (objectEquality(shapes[selectedShapeIndex], shape)) {\n      return;\n    }\n    const newShapes = [...shapes];\n    newShapes[selectedShapeIndex] = shape;\n    this.setState({ shapes: newShapes });\n  };\n\n  onDeleteShape = () => {\n    const shapes = [...this.state.shapes];\n    shapes.splice(this.state.selectedShapeIndex, 1);\n    let selectedShapeIndex = this.state.selectedShapeIndex;\n    if (selectedShapeIndex >= shapes.length) {\n      selectedShapeIndex = Math.max(shapes.length - 1, 0);\n    }\n    this.setState({\n      shapes,\n      selectedShapeIndex,\n    });\n  };\n\n  renderEditSection() {\n    const activeShape = this.getActiveShape();\n    return (\n      <div className=\"card-deck\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Shape List</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              Pick a shape to edit\n            </h6>\n            <div style={{ maxHeight: 400, overflow: \"auto\" }}>\n              <ShapeList\n                shapes={this.state.shapes}\n                activeShapeIndex={this.state.selectedShapeIndex}\n                onSelect={this.onShapeIndexSelect}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Shape Edits</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              Perform edits on the selected shape\n            </h6>\n            {activeShape ? (\n              <EditShape\n                activeShape={activeShape}\n                onUpdate={this.onUpdateShape}\n                onDelete={this.onDeleteShape}\n              />\n            ) : (\n              <p>Please add a shape to continue</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onAddShape = (translation: Canvas2D.Translation) => {\n    const shapeProperties = {\n      color: this.state.addShapeColor,\n      translation,\n      scale: { x: 20, y: 20, z: 20 },\n    };\n    const newShape = buildShape(this.state.addShapeType, shapeProperties);\n    const newShapes = [...this.state.shapes, newShape];\n    this.setState({ shapes: newShapes });\n  };\n\n  render() {\n    return (\n      <div className=\"mb-4\" style={{ maxWidth: 720, margin: \"0 auto\" }}>\n        <div style={{ textAlign: \"center\" }}>\n          <NavBar title=\"WebGL Transformations\" />\n          <Canvas onClick={this.onAddShape} shapes={this.state.shapes} />\n        </div>\n        {this.renderAddShapeCard()}\n        {this.renderEditSection()}\n      </div>\n    );\n  }\n}\n\nexport default () => <App />;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n// Assign some functions to window\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const domContainer = document.getElementById(\"assignment-4-container\");\n  ReactDOM.render(App(), domContainer);\n});\n"],"sourceRoot":""}