{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/common/render/2d/twoDimensionConverter.ts","webpack:///./src/common/setup/getScriptContentsById.ts","webpack:///./src/common/render/2d/circle.ts","webpack:///./src/common/render/2d/rectangle.ts","webpack:///./src/common/render/2d/star.ts","webpack:///./src/common/render/2d/triangle.ts","webpack:///./src/common/setup/createProgramFromScripts.ts","webpack:///./src/common/model/canvas2DShapeBuilders.ts","webpack:///./src/common/form/getElementValue.ts","webpack:///./src/common/render/2d/index.ts","webpack:///./src/assignment2/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","twoDimensionConverter","points","newPoints","length","push","getScriptContentsById","id","document","getElementById","text","renderCircle","gl","circle","radius","dimensions","height","dimenScale","width","increment","Math","PI","SIDES","cx","position","x","cy","y","circlePoints","angle","xn","cos","yn","sin","bufferData","ARRAY_BUFFER","Float32Array","STATIC_DRAW","drawArrays","TRIANGLE_FAN","renderRectangle","rectangle","x1","y1","x2","y2","TRIANGLES","renderStar","star","starPoints","tan","t1","t2","t3","renderTriangle","triangle","createProgramFromScripts","vertexShaderSource","fragmentShaderSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","buildBasicShape","type","properties","color","red","green","blue","translation","rotation","z","scale","buildRectangle","buildTriangle","buildShape","getElementValue","query","element","querySelector","Error","renderShape","shape","console","error","attributeCoords","uniformColor","bufferCoords","shapes","random","render","bindBuffer","vertexAttribPointer","FLOAT","forEach","uniform4f","addRectangle","e","preventDefault","stopPropagation","parseInt","addEventListener","canvas","getContext","useProgram","getAttribLocation","uniformResolution","getUniformLocation","enableVertexAttribArray","createBuffer","uniform2f","clearColor","clear","COLOR_BUFFER_BIT","init"],"mappings":"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","file":"static/js/assignment2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","export const twoDimensionConverter = (points: number[]) => {\n  const newPoints = [];\n  for (let i = 0; i < points.length; i++) {\n    newPoints.push(points[i]);\n    // Push every odd number (after Y is inserted)\n    if (i % 2 === 1) {\n      newPoints.push(0);\n    }\n  }\n  return newPoints;\n};\n","export const getScriptContentsById = (id: string): string => {\n  const element = document.getElementById(id) as HTMLScriptElement;\n  return element.text;\n};\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\n/**\n * Renders a n-side polygon as a circle inside the given webGL context.\n *\n * @param gl rendering context\n * @param circle dimensions holder\n */\nexport const renderCircle = (\n  gl: WebGLRenderingContext,\n  circle: Canvas2D.Circle | Canvas3D.Circle\n) => {\n  const radius = circle.dimensions.height / 2;\n  const dimenScale = circle.dimensions.width / circle.dimensions.height;\n  const increment = (Math.PI * 2) / SIDES;\n  const cx = circle.position.x;\n  const cy = circle.position.y;\n  // Generate points based on unit circle\n  let circlePoints = [cx, cy];\n  for (let n = SIDES; n >= 0; n--) {\n    const angle = n * increment;\n    const xn = cx + radius * Math.cos(angle) * dimenScale;\n    const yn = cy - radius * Math.sin(angle);\n    circlePoints.push(xn, yn);\n  }\n\n  const is3D = \"z\" in circle.position;\n  if (is3D) {\n    circlePoints = twoDimensionConverter(circlePoints);\n  }\n\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array(circlePoints),\n    gl.STATIC_DRAW\n  );\n  gl.drawArrays(gl.TRIANGLE_FAN, 0, SIDES + 2);\n};\n\nconst SIDES = 24;\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\nexport const renderRectangle = (\n  gl: WebGLRenderingContext,\n  rectangle: Canvas2D.Rectangle | Canvas3D.Rectangle\n) => {\n  const x1 = rectangle.position.x - rectangle.dimensions.width / 2;\n  const y1 = rectangle.position.y - rectangle.dimensions.height / 2;\n  const x2 = rectangle.position.x + rectangle.dimensions.width / 2;\n  const y2 = rectangle.position.y + rectangle.dimensions.height / 2;\n  let points = [x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2];\n\n  const is3D = \"z\" in rectangle.position;\n  if (is3D) {\n    points = twoDimensionConverter(points);\n  }\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(points), gl.STATIC_DRAW);\n  gl.drawArrays(gl.TRIANGLES, 0, 6);\n};\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\n/**\n * Renders a 5-pointed star inside the given webGL context.\n *\n * 2:33am geometry is good geometry\n *\n * @param gl rendering context\n * @param star dimensions holder\n */\nexport const renderStar = (\n  gl: WebGLRenderingContext,\n  star: Canvas2D.Star | Canvas3D.Star\n) => {\n  const radius = star.dimensions.height / 2;\n  const dimenScale = star.dimensions.width / star.dimensions.height;\n  const increment = (Math.PI * 2) / 5;\n  const cx = star.position.x;\n  const cy = star.position.y;\n  // Generate points from top, clockwise\n  const starPoints = {};\n  for (let n = 0; n < 5; n++) {\n    const angle = Math.PI / 2 - n * increment;\n    const xn = cx + radius * Math.cos(angle) * dimenScale;\n    const yn = cy - radius * Math.sin(angle);\n    starPoints[`${n + 1}`] = [xn, yn];\n  }\n  // Generate sixth point below center\n  starPoints[\"6\"] = [\n    cx,\n    cy + radius * (Math.tan((1 / 5) * Math.PI) - Math.tan((1 / 10) * Math.PI)),\n  ];\n  // Produce three triangles that compose the star\n  const t1 = [...starPoints[\"1\"], ...starPoints[\"3\"], ...starPoints[\"6\"]];\n  const t2 = [...starPoints[\"1\"], ...starPoints[\"6\"], ...starPoints[\"4\"]];\n  const t3 = [...starPoints[\"5\"], ...starPoints[\"2\"], ...starPoints[\"6\"]];\n\n  let points = [...t1, ...t2, ...t3];\n\n  const is3D = \"z\" in star.position;\n  if (is3D) {\n    points = twoDimensionConverter(points);\n  }\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(points), gl.STATIC_DRAW);\n  gl.drawArrays(gl.TRIANGLES, 0, 3 * 3);\n};\n","import { twoDimensionConverter } from \"./twoDimensionConverter\";\n\nexport const renderTriangle = (\n  gl: WebGLRenderingContext,\n  triangle: Canvas2D.Triangle | Canvas3D.Triangle\n) => {\n  const x1 = triangle.position.x - triangle.dimensions.width / 2;\n  const y1 = triangle.position.y + triangle.dimensions.height / 2;\n  const x2 = triangle.position.x + triangle.dimensions.width / 2;\n  const y2 = triangle.position.y + triangle.dimensions.height / 2;\n  const x3 = triangle.position.x;\n  const y3 = triangle.position.y - triangle.dimensions.height / 2;\n\n  let points = [x1, y1, x3, y3, x2, y2];\n\n  const is3D = \"z\" in triangle.position;\n  if (is3D) {\n    points = twoDimensionConverter(points);\n  }\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(points), gl.STATIC_DRAW);\n  gl.drawArrays(gl.TRIANGLES, 0, 3);\n};\n","export const createProgramFromScripts = (\n  gl: WebGLRenderingContext,\n  vertexShaderSource: string,\n  fragmentShaderSource: string\n) => {\n  // Create GLSL shaders, upload the GLSL source, compile the shaders\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexShaderSource);\n  gl.compileShader(vertexShader);\n\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentShaderSource);\n  gl.compileShader(fragmentShader);\n\n  // Link the two shaders into a program\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  return program;\n};\n","const buildBasicShape = (type: Canvas2D.ShapeType) => (\n  properties: Partial<Canvas2D.Shape> = {}\n): Canvas2D.Shape => {\n  return {\n    type,\n    position: {\n      x: 0,\n      y: 0,\n    },\n    dimensions: {\n      width: 1,\n      height: 1,\n    },\n    color: {\n      red: 0,\n      green: 0,\n      blue: 0,\n    },\n    translation: { x: 0, y: 0 },\n    rotation: { z: 0 },\n    scale: { x: 1, y: 1 },\n    ...properties,\n  };\n};\n\nexport const buildRectangle = buildBasicShape(\"RECTANGLE\");\nexport const buildTriangle = buildBasicShape(\"TRIANGLE\");\nexport const buildStar = buildBasicShape(\"STAR\");\nexport const buildCircle = buildBasicShape(\"CIRCLE\");\n\nexport const buildShape = (\n  type: Canvas2D.ShapeType,\n  properties: Partial<Canvas2D.Shape>\n) => {\n  return buildBasicShape(type)(properties);\n};\n","export const getElementValue = (query: string) => {\n  const element = document.querySelector(query) as HTMLInputElement;\n  if (element === null) {\n    throw new Error(`Element ${query} does not exist`);\n  }\n  return element.value;\n};\n","import { renderCircle } from \"./circle\";\nimport { renderRectangle } from \"./rectangle\";\nimport { renderStar } from \"./star\";\nimport { renderTriangle } from \"./triangle\";\n\nexport const renderShape = (\n  gl: WebGLRenderingContext,\n  shape: Canvas2D.Shape\n) => {\n  switch (shape.type) {\n    case \"RECTANGLE\":\n      renderRectangle(gl, shape as Canvas2D.Rectangle);\n      break;\n    case \"TRIANGLE\":\n      renderTriangle(gl, shape as Canvas2D.Triangle);\n      break;\n    case \"CIRCLE\":\n      renderCircle(gl, shape as Canvas2D.Circle);\n      break;\n    case \"STAR\":\n      renderStar(gl, shape as Canvas2D.Star);\n      break;\n    default:\n      console.error(\"Rendering unhandled shape type\", shape);\n  }\n};\n","import { getElementValue } from \"@common/form/getElementValue\";\nimport { buildRectangle } from \"@common/model/canvas2DShapeBuilders\";\nimport { renderShape } from \"@common/render/2d\";\nimport { createProgramFromScripts } from \"@common/setup/createProgramFromScripts\";\nimport { getScriptContentsById } from \"@common/setup/getScriptContentsById\";\n\nconst shapes: Canvas2D.Shape[] = [\n  buildRectangle({\n    position: {\n      x: 200,\n      y: 100,\n    },\n    dimensions: {\n      width: 50,\n      height: 50,\n    },\n    color: {\n      red: Math.random(),\n      green: Math.random(),\n      blue: Math.random(),\n    },\n  }),\n];\n\nlet gl: WebGLRenderingContext;\nlet attributeCoords: number;\nlet uniformColor: WebGLUniformLocation;\nlet bufferCoords: WebGLBuffer;\n\nconst init = () => {\n  // get a reference to the canvas and WebGL context\n  const canvas = document.querySelector(\"#canvas\") as HTMLCanvasElement;\n  gl = canvas.getContext(\"webgl\");\n\n  // create and use a GLSL program\n  const program = createProgramFromScripts(\n    gl,\n    getScriptContentsById(\"vertex-shader-2d\"),\n    getScriptContentsById(\"fragment-shader-2d\")\n  );\n  gl.useProgram(program);\n\n  // Click listener\n  document\n    .querySelector(\"#addRectangle\")\n    .addEventListener(\"click\", addRectangle);\n\n  // get reference to GLSL attributes and uniforms\n  attributeCoords = gl.getAttribLocation(program, \"a_coords\");\n  const uniformResolution = gl.getUniformLocation(program, \"u_resolution\");\n  uniformColor = gl.getUniformLocation(program, \"u_color\");\n\n  // initialize coordinate attribute to send each vertex to GLSL program\n  gl.enableVertexAttribArray(attributeCoords);\n\n  // initialize coordinate buffer to send array of vertices to GPU\n  bufferCoords = gl.createBuffer();\n\n  // configure canvas resolution and clear the canvas\n  gl.uniform2f(uniformResolution, gl.canvas.width, gl.canvas.height);\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n};\n\nconst render = () => {\n  gl.bindBuffer(gl.ARRAY_BUFFER, bufferCoords);\n  gl.vertexAttribPointer(attributeCoords, 2, gl.FLOAT, false, 0, 0);\n\n  shapes.forEach((shape) => {\n    gl.uniform4f(\n      uniformColor,\n      shape.color.red,\n      shape.color.green,\n      shape.color.blue,\n      1\n    );\n\n    renderShape(gl, shape);\n  });\n};\n\nconst addRectangle = (e: Event) => {\n  // Prevent form button from submitting\n  e.preventDefault();\n  e.stopPropagation();\n\n  const x = parseInt(getElementValue(\"#x\"));\n  const y = parseInt(getElementValue(\"#y\"));\n  const width = parseInt(getElementValue(\"#width\"));\n  const height = parseInt(getElementValue(\"#height\"));\n\n  const rectangle = buildRectangle({\n    position: { x, y },\n    dimensions: { width, height },\n    color: {\n      red: Math.random(),\n      green: Math.random(),\n      blue: Math.random(),\n    },\n  });\n\n  shapes.push(rectangle);\n  render();\n};\n\n// Assign some functions to window\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  init();\n  render();\n});\n"],"sourceRoot":""}